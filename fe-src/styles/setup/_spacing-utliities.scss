// this functionaliy will introduce some spacing classes that can be used
// Suggest if considering that you uncomment in setup.scss and take a look at the classes that are generated

//For example :
//
//.pt-md {
//  padding-top: 1rem !important
//}
//
//.mt-md {
//  margin-top: 1rem !important
//}

$sizeUnit: rem;
$marginKey: 'm';
$paddingKey: 'p';
$separator: '-';
$sizes: (
    ('none', 0),
    ('sm', $spacing-val-sm),
    ('md', $spacing-val-md),
    ('lg', $spacing-val-lg),
    ('xl', $spacing-val-xl),
    ('xxl', $spacing-val-xxl),
);
$positions: (
    ('t', 'top'),
    ('r', 'right'),
    ('b', 'bottom'),
    ('l', 'left')
);

@function sizeValue($key, $value) {
  @return if($key == 'none', 0, $value + $sizeUnit);
}

@each $size in $sizes {
  $sizeKey: nth($size, 1);
  $sizeValue: nth($size, 2);
  .#{$marginKey}#{$separator}#{$sizeKey} {
    margin: sizeValue($sizeKey, $sizeValue)!important;
  }
  .#{$paddingKey}#{$separator}#{$sizeKey} {
    padding: sizeValue($sizeKey, $sizeValue)!important;
  }
  @each $position in $positions {
    $posKey: nth($position, 1);
    $posValue: nth($position, 2);
    .#{$marginKey}#{$posKey}#{$separator}#{$sizeKey} {
      margin-#{$posValue}: sizeValue($sizeKey, $sizeValue)!important;
    }
    .#{$paddingKey}#{$posKey}#{$separator}#{$sizeKey} {
      padding-#{$posValue}: sizeValue($sizeKey, $sizeValue)!important;
    }
  }
}
